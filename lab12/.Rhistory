), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="darkolivegreen", fill="plum", alpha=0.75) +
theme_linedraw(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 4,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="darkolivegreen", fill="plum", alpha=0.75) +
theme_linedraw(base_size = 18) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Year and Ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Ethnicity==input$y & Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="darkgoldenrod2", fill="coral1", alpha=0.9) +
theme_linedraw(base_size = 18) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Relative Abundance"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select RA Taxon", choices = c("RA_Apes", "RA_Birds", "RA_Elephant", "RA_Monkeys", "RA_Rodent", "RA_Ungulate"),
selected = "RA_Apes"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5),
hr(),
helpText("Reference: Koerner SE, Poulsen JR, Blanchard EJ, Okouyi J, Clark CJ. Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016.")
), # close the first box
box(title = "Relative Abundance %", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gabon %>%
ggplot(aes_string(x = "Distance", y = input$x)) +
geom_point(size=input$pointsize, alpha=0.8)+
geom_smooth(method=lm, se=T)+
scale_x_continuous(breaks=seq(0, 30, by = 5))+ theme_linedraw(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
mutate_at?
?mutate_at
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies %>%
mutate_at(c("sales", "profit", "assets", "market.value"), remove.$, na.rm=T)
companies %>%
mutate_at(c("sales", "profit", "assets", "market.value"), remove."$", na.rm=T)
companies %>%
separate(sales, into=c("dollar", "sales"), sep="")
companies %>%
separate(sales, into=c("dollar", "sales"), sep=" ")
companies %>%
separate(sales, into=c("$sales", "M/B"), sep=" ")
companies %>%
separate(sales, into=c("nothing", "$", "sales"), sep="")
companies %>%
separate(sales, into=c("nothing", "sales"), sep="$")
companies %>%
mutate(across(c(sales, profit, assets, market.value)))
companies %>%
separate(sales, into=c("$", "sales"), sep="")
companies %>%
separate(sales, into=c("$", "sales"), sep="$")
companies %>%
separate(sales, into=c("$", "sales"), sep="")
?separate
companies %>%
separate(sales, into=c("$", "sales"), sep="$")
companies %>%
gsub("$", "", as.character(sales) n)
companies %>%
gsub("$", "", as.character(sales) )
gsub("$", "", as.character(companies$sales) )
gsub("$", "", as.character(companies$sales) n)
gsub("$", "", as.character(companies$sales) )
gsub("$", "", as.character(companies$sales) n)
gsub("$", "", as.character(companies$sales),n)
gsub("$", "", as.character(companies$sales), n)
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies
companies$sales=as.numeric(gsub("$", "", companies$sales))
companies
companies
companies$sales=as.charachter(gsub("\\$", "", companies$sales))
companies$sales=as.character(gsub("\\$", "", companies$sales))
companies
companies$sales=as.character(gsub("$", "", companies$sales))
companies
companies$sales=as.factor(gsub("\\$", "", companies$sales))
companies
companies$sales=as.factor(gsub("$", "", companies$sales))
companies
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies
companies$sales=as.numeric(gsub("\\$", "", companies$sales)n)
companies$sales=as.numeric(gsub("\\$", "", companies$sales), n)
companies
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies$sales <-gsub("$", "", as.character(companies$sales))
companies
companies$sales
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies %>%
separate(sales, into=c("sales", "factor"), sep=" ")
companies$sales <-gsub("$", "", as.character(companies$sales))
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor"), sep=" ")
companies <- companies %>%
separate(sales, into=c("sales", "factor"), sep=" ")
?separate
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor"), sep=" ")
companies$sales <-gsub("$", "", as.character(companies$sales))
companies
companies$sales
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies
companies <- companies %>%
separate(assets, into=c("assets", "factor"), sep=" ")
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor2"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies$assets=as.numeric(gsub("\\$", "", companies$assets))
companies$market.value=as.numeric(gsub("\\$", "", companies$market.value))
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies$assets=as.numeric(gsub("\\$", "", companies$assets))
companies$market.value=as.numeric(gsub("\\$", "", companies$market.value))
companies
companies <- read_csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- read_csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies$assets=as.numeric(gsub("\\,", "", companies$assets))
companies$assets=as.numeric(gsub("\\,","", companies$assets))
companies$assets=as.numeric(gsub("\\$", "", companies$assets))
companies$market.value=as.numeric(gsub("\\,", "", companies$market.value))
companies$market.value=as.numeric(gsub("\\,", "", companies$market.value))
companies$assets=as.numeric(gsub("\\$", "", companies$assets))
companies$market.value=as.numeric(gsub("\\$", "", companies$market.value))
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies$assets=as.numeric(gsub("\\,","", companies$assets))
companies$assets=as.numeric(gsub(",","", companies$assets))
companies$market.value=as.numeric(gsub(",", "", companies$market.value))
companies$market.value=as.numeric(gsub(",","", companies$market.value))
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies$assets=as.numeric(gsub("\\$", "", companies$assets))
companies$market.value=as.numeric(gsub("\\$", "", companies$market.value))
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies_new1 <- companies$assets=as.numeric(gsub(",","", companies$assets))
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
suppressWarnings(companies_new1 <- companies$sales=as.numeric(gsub("\\$", "", companies$sales)))
suppressWarnings(companies$sales=as.numeric(gsub("\\$", "", companies$sales)))
companies_new1 <- companies %>%
(gsub(",","", market.value))
companies_new1 <- companies %>%
gsub(",","", market.value)
companies_new1 <- companies %>%
gsub(",","", assets)
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies_new1 <- companies %>%
gsub(",","", assets)
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies <- companies %>%
gsub("\\$", "",sales)
companies <- companies %>%
gsub("\\$", "", companies$sales)
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies$sales=as.numeric(gsub("\\$", "", companies$sales))
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies$assets=as.numeric(gsub("\\$", "", companies$assets))
companies
companies
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
library("tidyverse")
library("janitor")
library("naniar")
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies
gsub("\\$", "", companies$sales)
companies$sales = gsub("\\$", "", companies$sales)
companies$sales = as.numeric(companies$sales)
companies
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
gsub(",","", companies$assets)
companies$assets = gsub(",","", companies$assets)
companies$assets
companies$assets = gsub(",","", companies$assets)
companies$assets = gsub("$","", companies$assets)
companies$assets
companies$assets = gsub(",","", companies$assets)
companies$assets = gsub("$","", companies$assets)
companies$assets = gsub(",","", companies$assets)
companies$assets = gsub("\\$","", companies$assets)
companies$assets
companies$assets = as.numeric(companies$assets)
companies
companies$market.value = gsub(",","", companies$market.value)
companies$market.value = gsub("\\$","", companies$market.value)
companies$market.value = as.numeric(companies$market.value)
companies
companies
companies <- janitor::clean_names(companies)
companies
?case_when
companies
companies <- companies %>%
mutate(assets2 = case_when(factor3 = "B" ~ assets/100))
companies <- companies %>%
mutate(assets2 = case_when(factor3 = "M" ~ assets/100))
companies <- companies %>%
mutate(assets2 = case_when(factor3 = "M" ~ `assets`/100))
companies <- companies %>%
mutate(case_when(factor3 = "M" ~ assets/100))
companies <- companies %>%
mutate(case_when(factor3 == "M" ~ assets/100))
companies
companies <- companies %>%
mutate(case_when(factor2 == "M" ~ profit/100))
companies
companies %>%
filter(factor2 =="M")
companies %>%
filter(factor2 =="M")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
getwd()
billionaires<- read.csv("forbes_dataset_2022/forbes_billionaires_2022.csv", na="")
billionaires
billionaires <- janitor::clean_names(billionaires)
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market.value, into=c("market.value", "factor4"), sep=" ")
companies$sales = gsub("\\$", "", companies$sales)
companies$sales = as.numeric(companies$sales)
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies$assets = gsub(",","", companies$assets)
companies$assets = gsub("\\$","", companies$assets)
companies$assets = as.numeric(companies$assets)
companies$market.value = gsub(",","", companies$market.value)
companies$market.value = gsub("\\$","", companies$market.value)
companies$market.value = as.numeric(companies$market.value)
companies
companies <- janitor::clean_names(companies)
companies
companies %>%
filter(factor2 =="M")
companies %>%
fliter(factor1 == "M")
companies %>%
filter(factor1 == "M")
companies %>%
filter(factor3 == "M")
companies %>%
filter(factor4== "M")
glimpse(billionaires)
glimpse(companies)
naniar::miss_var_summary(billionaires)
naniar::miss_var_summary(companies)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
UC_admit <- readr::read_csv("data/UC_admit.csv")
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Year and Ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Ethnicity==input$y & Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="darkgoldenrod2", fill="coral1", alpha=0.9) +
theme_linedraw(base_size = 18) +
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
